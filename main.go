package main

import (
	"flag"
	"fmt"
	"log"
	"os"
	. "plaso2graph/master/src"
	"strings"
)

var (
	source         = flag.String("source", "data/plaso_output.csv", "Source CSV File generated by plaso")
	output_dir     = flag.String("output", "output/output.json", "Output Json File")
	extractor_name = flag.String("extractor", "neo4j", "Type of Extractor to use. (default: neo4j, maltego)")
)

func HandleErr(err error) {
	if err != nil {
		log.Fatal(err)
	}
}

func compare(a string, b string) bool {
	return strings.Compare(a, b) == 0
}

func ValidateArgs() {
	// Check if source exists
	if _, err := os.Stat(*source); err != nil {
		fmt.Printf("Source file \"%s\" Does not exist\n", *source)
		log.Fatal()
	}

	if _, err := os.Stat(*output_dir); err == nil {
		fmt.Printf("Output file \"%s\" already exists exist\n", *output_dir)
	}

	if compare(*extractor_name, "neo4j") && compare(*extractor_name, "maltego") {
		fmt.Println("Extractor must be one from: neo4j, maltego.")
		fmt.Println("Extractor: ", *extractor_name)
	}
}

func main() {
	flag.Parse()
	ValidateArgs()

	dat := ParseFile(*source)
	size := len(dat)
	fmt.Printf("Line parsed : %d \n", size)

	for _, d := range dat {
		fmt.Println(d.Source)
	}
}
